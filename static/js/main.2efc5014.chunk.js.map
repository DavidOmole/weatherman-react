{"version":3,"sources":["weatherman.png","components/search/Search.module.scss","components/header/Header.js","components/footer/Footer.js","components/error/Error.js","components/loader/Loader.js","utils/CoordinateHelper.js","utils/fetchIPLocation.js","utils/validityHelper.js","context/address/Address.js","components/search/Search.js","utils/getWeatherIcon.js","utils/assetsSrc.js","utils/temperatureHelper.js","context/unit/Unit.js","components/weather_card/WeatherCard.js","components/weather/CurrentInfo.js","components/weather/WeatherIcon.js","components/weather/CurrentInfoDetail.js","container/weather_week/WeatherWeek.js","utils/DateHelper.js","utils/FetchWeatherHelper.js","utils/API.js","container/weather_forecast/WeatherForecast.js","container/error_boundary/ErrorBoundary.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","id","className","href","alt","style","width","height","src","logo","Footer","backgroundColor","title","role","aria-label","color","size","Error","errorMessage","useState","show","setShow","Alert","variant","onClose","dismissible","Loader","message","parseCoordinates","latLng","latlngArr","split","map","v","parseFloat","lat","lng","fetchIPLocation","a","async","fetch","then","response","ok","json","console","log","isForecastValid","forecast","detail","isValid","value","isEmpty","isNil","AddressContext","React","createContext","AddressContextProvider","props","updateAddress","mode","res","length","updateState","address","cityName","latt_long","catch","error","updateIPAddress","lon","getCurrentCoordinates","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","state","setState","this","Provider","children","Component","getSuggestionValue","suggestion","renderSuggestion","query","isHighlighted","padding","SearchInput","debounceQuery","debounce","getSuggestions","onSuggestionSelected","event","suggestionValue","suggestionIndex","sectionIndex","method","context","tite","showLoader","onChange","newValue","onBlur","onSuggestionsFetchRequested","reason","componentDidUpdate","items","onSuggestionsClearRequested","renderSuggestionContainer","containerProps","ref","isolatedScroll","component","suggestions","searchValue","trim","toLowerCase","inputLength","headers","redirect","body","JSON","stringify","type","aroundLatLngViaIP","language","data","nbHits","cityname","Array","isArray","locale_names","area","administrative","country","parseInt","objectID","_geoloc","inputProps","placeholder","isLoading","highlightFirstSuggestion","theme","contextType","getWeatherIcon","iconAbbr","isProduction","convertToFahrenheit","C","UnitContext","weatherUnit","UnitContextProvider","setWeatherUnit","roundNumbers","num","Math","round","WeatherCard","weathertype","highlightCard","isSelected","onClick","clickCallback","day","substring","assetsSrc","weatherType","abbr","name","highestTemp","lowestTemp","humidity","speed","CurrentInfo","date","setDate","time","setTime","location","setLocation","dateTimeRef","useRef","setDateTime","dateObj","format","current","useEffect","moment","tz","timezone","dateTimer","setInterval","dateTimeObj","add","clearInterval","fontSize","WeatherIcon","iconName","WeatherDirectionIcon","CurrentInfoDetail","mph","currentWeather","useContext","unitClick","unit","weather_state_abbr","weather_state_name","the_temp","applicable_date","precipitation","wind_speed","toFixed","wind_direction_compass","WeatherWeek","index","selectedIndex","Date","getDay","max_temp","min_temp","FetchWeatherData","woeid","url","consolidated_weather","WeatherForecast","addressContext","setForecast","weatherArray","setWeatherArray","setIsLoading","isError","setisError","showContainer","setShowContainer","selectedDay","setSelectedDay","weatherForecast","fetchWeatherData","target","rel","class","ErrorBoundary","hasError","errorInfo","App","Row","minWidth","Search","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2efc5014.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weatherman.d0288ce5.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__2Iupt\",\"input\":\"Search_input__1-wK5\",\"suggestionsContainer\":\"Search_suggestionsContainer__3y4xs\",\"suggestionsContainerOpen\":\"Search_suggestionsContainerOpen__X19wF\",\"suggestion\":\"Search_suggestion__xBaXb\",\"suggestionHighlighted\":\"Search_suggestionHighlighted__QJlpM\"};","import React, {Component, Fragment} from 'react';\r\nimport logo from '../../weatherman.png';\r\n\r\nconst Header = () => {\r\n   return (<div id=\"\" className=\"w-100 d-flex justify-content-center p-3\">\r\n     <div className=\"mx-2 px-2\">\r\n      <a href=\"/\">\r\n        <img id=\"weatherman-logo\" alt=\"Weather Man\" style={{width: \"3rem\", height: \"3rem\"}} src={logo} className=\"\" />\r\n      </a></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {Component, Fragment} from 'react';\r\nimport {FaHeart, FaReact} from \"react-icons/fa\";\r\n\r\nconst Footer = () => {\r\n  return (<div id=\"footer\" className=\"p-4 d-flex flex-column flex-sm-column flex-md-row flex-lg-row justify-content-center align-items-center text-dark w-100\" style={{backgroundColor: '#fafafa'}}>\r\n      <div className=\"footer-component text-center d-flex  w-100 w-md-25 my-2 my-md-0 justify-content-center\">\r\n        <a href=\"https://github.com/dsaw/weatherman-react\">Github</a>\r\n      </div>\r\n      <div className=\"footer-component text-center d-flex  w-100 w-md-50 my-2 my-md-0 justify-content-center\">\r\n      Made with&nbsp;\r\n        <span title=\"Heart\" role=\"img\" aria-label=\"Love\" > <FaHeart color={'#e31b23'} size={18}/> </span>\r\n        &nbsp;using&nbsp;\r\n        <span title=\"React\" role=\"img\" aria-label=\"React\"> <FaReact color={'#2acef7'} size={18}/> </span>\r\n        &nbsp;by&nbsp; <a href=\"/\"> Devesh</a>\r\n      </div>\r\n      <div className=\"footer-component text-center d-flex w-100 w-md-25 my-2 my-md-0 justify-content-center\">\r\n        <a href=\"https://github.com/dsaw/weatherman-react/blob/master/LICENSE\">Privacy Policy </a>\r\n      </div>\r\n    </div>);\r\n}\r\n\r\nexport default Footer;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Alert} from 'react-bootstrap';\r\nimport './Error.scss';\r\n\r\nconst Error = ({errorMessage}) => {\r\n    const [show, setShow] = useState(true);\r\n\r\n   return (show ? <Alert className=\"text-center\" variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n          <p>{errorMessage || \"Unfortunately, some error has occurred.\"}</p>\r\n      </Alert> : null);\r\n};\r\n\r\nexport default Error;\r\n","import React, {Fragment} from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader = ({color, message}) => {\r\n  // TODO: refactor to add param & enhance text styling\r\n  return (\r\n    <Fragment>\r\n    <div className='spinner'>\r\n      <div className='puff-one'> </div>\r\n      <div className='puff-two'></div>\r\n    </div>\r\n    {message ? <div className=\"message text-info text-center my-1\">{message}</div> : null}\r\n    </Fragment>\r\n  );\r\n\r\n}\r\n\r\nexport default Loader;\r\n","\r\n\r\nconst parseCoordinates = (latLng) => {\r\n  let latlngArr = latLng.split(',').map(v => parseFloat(v));\r\n  return {lat: latlngArr[0], lng: latlngArr[1]};\r\n}\r\n\r\nexport default parseCoordinates;\r\n","\r\n const fetchIPLocation = async () => {\r\n  var response\r\n  try {\r\n  response = await fetch('http://ip-api.com/json').then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    return  response.json();\r\n  });\r\n\r\n  }\r\n  catch (error) {\r\n    response = {};\r\n    console.log(error);\r\n  }\r\n  finally {\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport default fetchIPLocation;\r\n","import {isEmpty, isNil} from 'lodash';\r\nconst isCityValid = (name) => {\r\n  return (name ? true : false);\r\n};\r\n\r\nconst isForecastValid = (forecast) => {\r\n  // api specific - metaweather returns detail as not found\r\n  return forecast && !(forecast.detail);\r\n}\r\n\r\nconst isValid = (value) => {\r\n  return !isEmpty(value) && !isNil(value);\r\n}\r\n\r\n\r\nexport {isCityValid, isForecastValid, isValid};\r\n","// eslint-disable-next-line\r\nimport React, {\r\n  Component\r\n} from 'react';\r\nimport parseCoordinates from '../../utils/CoordinateHelper';\r\nimport fetchIPLocation from '../../utils/fetchIPLocation';\r\nimport {isValid} from '../../utils/validityHelper';\r\n\r\n\r\nconst AddressContext = React.createContext(null);\r\n\r\n//context to set address when selected\r\nclass AddressContextProvider extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: {},\r\n      latLng: {},\r\n      cityName: '',\r\n      updateState: this.updateState\r\n    };\r\n\r\n  }\r\n\r\n  updateAddress = (latLng) => {\r\n    //  geocoding api to get address closest to latLong\r\n    const response = fetch(`https://www.metaweather.com/api/location/search/?lattlong=${latLng.lat},${latLng.lng}`, {\r\n        mode: \"cors\"\r\n      }).then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      }).then((res) => {\r\n        // set Address\r\n        if (res.length) {\r\n          console.log(res[0]);\r\n          this.updateState({\r\n            address: res[0],\r\n            cityName: res[0].title,\r\n            latLng: parseCoordinates(res[0].latt_long)\r\n          });\r\n\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        console.error('There is a problem with your fetch:', error);\r\n      });\r\n\r\n\r\n  }\r\n\r\n  updateIPAddress = async () => {\r\n    var response = await fetchIPLocation();\r\n    if (isValid(response)) {\r\n      var latLng = {\r\n        lat: response.lat,\r\n        lng: response.lon\r\n      };\r\n      this.updateAddress(latLng);\r\n    }\r\n  }\r\n\r\n  getCurrentCoordinates = () => {\r\n    // use HTML5 geolocation\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        var latLng = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        };\r\n        this.updateAddress(latLng);\r\n        console.log(latLng);\r\n\r\n      }, (error) => {\r\n        //handle error here\r\n        console.error(error);\r\n        this.updateIPAddress();\r\n      });\r\n    }\r\n    // TODO: do ip lookup alternatively if geolocation not given\r\n    else {\r\n      this.updateIPAddress();\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  updateState = (state) => {\r\n    this.setState({\r\n      ...state\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCurrentCoordinates();\r\n\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <AddressContext.Provider value={this.state}>\r\n         {this.props.children}\r\n      </AddressContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  AddressContextProvider,\r\n  AddressContext\r\n};\r\n","import React, {Component, Fragment} from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport IsolatedScroll from 'react-isolated-scroll';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport Error from '../error/Error';\r\nimport Loader from '../loader/Loader';\r\nimport {AddressContext} from '../../context/address/Address';\r\nimport parseCoordinates from '../../utils/CoordinateHelper';\r\n\r\nimport * as cityListConfig from '../../data/city.list.json';\r\n\r\nimport theme from './Search.module.scss';\r\n\r\n// for renaming name to id of city list\r\nfunction renameKeys(obj, newKeys) {\r\n  const keyValues = Object.keys(obj).map(key => {\r\n    const newKey = newKeys[key] || key;\r\n    return { [newKey]: obj[key] };\r\n  });\r\n  return Object.assign({}, ...keyValues);\r\n}\r\n\r\nconst getSuggestionValue = suggestion => suggestion.value.split(',')[0];\r\n\r\nconst shouldRenderSuggestions = () => (true);\r\n\r\nconst renderSuggestion = (suggestion, {query, isHighlighted}) => {\r\n  return (isHighlighted ?\r\n  <div style={{backgroundColor: 'black', color: 'white', padding: '5px 0 5px 3px'}}>\r\n    {suggestion.value}\r\n  </div> :\r\n  <div style={{padding: '5px 0 5px 5px'}}>\r\n    {suggestion.value}\r\n  </div>\r\n);\r\n};\r\n\r\nclass SearchInput extends Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    //this.cityIdList = cityListConfig.default.map(obj => renameKeys(obj, {'name':'value'}));\r\n    this.state = {\r\n      value: '',\r\n      suggestions: [],\r\n      showLoader: false,\r\n      errorMessage: ''\r\n    };\r\n  }\r\n\r\n  // Teach Autosuggest how to calculate suggestions for any given input value.\r\n  async getSuggestions (value) {\r\n  const searchValue = value ? value.trim().toLowerCase() : '';\r\n  const inputLength = searchValue.length;\r\n  let items = [];\r\n\r\n  try {\r\n   if (inputLength === 0)\r\n      items = [];\r\n    else {\r\n      this.setState({\r\n        suggestions:[],\r\n        showLoader: true});\r\n\r\n      const response = await fetch(`https://places-dsn.algolia.net/1/places/query`,\r\n      {  method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        redirect: 'follow',\r\n        body: JSON.stringify({query: searchValue, type: 'city', aroundLatLngViaIP: false, language: 'en'})\r\n      });\r\n\r\n        const data = await response.json();\r\n        console.log(data);\r\n        if(data.nbHits > 0)\r\n        {\r\n          // fetch lat, long and location from metaweather api\r\n\r\n           items = data['hits'].map(res => {\r\n            var cityname = Array.isArray(res.locale_names) && res.locale_names.length ? res.locale_names[0] : '';\r\n            var area = res.administrative ? res.administrative[0] : '';\r\n            var country = res.country || '';\r\n            var resultantname = area ? cityname + ', ' + area + ', ' + country : cityname + ', ' + country;\r\n\r\n             return {'value': resultantname,\r\n                      'id': parseInt(res.objectID.split('_')[0]),\r\n                      'latLng': res._geoloc  };\r\n          });\r\n        }\r\n      }\r\n\r\n      this.setState({\r\n        suggestions: items,\r\n        showLoader: false,\r\n        errorMessage: ((items.length > 0 && searchValue.length > 0) ? '' :\r\n        (searchValue.length > 0 ? 'There seems to be no results for the query entered, please try again' : ''))\r\n      });\r\n\r\n     // this.SearchItemInArrayObjects(items, searchValue.trim(), 'value');\r\n      console.log(searchValue);\r\n    }\r\n    catch(error) {\r\n      this.setState({\r\n        suggestions: [],\r\n        showLoader: false,\r\n        errorMessage: 'Some error came up:' + error});\r\n\r\n    }\r\n\r\n      return items;\r\n\r\n}\r\n\r\n  debounceQuery = debounce(this.getSuggestions, 1200);\r\n  onSuggestionSelected  = (event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) => {\r\n      console.log(suggestion);\r\n\r\n      // Metaweather needs a separate location search with given lat long to get\r\n      // the address with location name & id which than will be needed\r\n      const response = fetch(`https://www.metaweather.com/api/location/search/?lattlong=${suggestion.latLng.lat},${suggestion.latLng.lng}`,\r\n      {\r\n        mode: \"cors\"\r\n      }\r\n      ).then((response)=> {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      }).then((res) => {\r\n        // set Address\r\n         if (res.length) {\r\n           console.log(this.context);\r\n           res[0].title = suggestion.value;\r\n           this.context.updateState({\r\n             address: res[0],\r\n             cityName: res[0].tite,\r\n             latLng: parseCoordinates(res[0].latt_long)\r\n           });\r\n\r\n         }\r\n          console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        console.error('There is a problem with your fetch: ', error);\r\n        this.setState({\r\n          showLoader: false,\r\n          errorMessage: \"Something went wrong, weather address list can't be fetched right now\"\r\n        });\r\n\r\n      });\r\n  };\r\n\r\n\r\n  onChange = (event, { newValue}) => {\r\n    console.log(\"change:\", event);\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n  onBlur = (event, { newValue}) => {\r\n    console.log(\"change:\", event);\r\n  }\r\n\r\n   onSuggestionsFetchRequested = ({ value, reason }) => {\r\n     console.log(\"fetch requested:\", reason);\r\n     if (reason === 'input-focused')\r\n        return;\r\n      this.debounceQuery(value);\r\n   };\r\n\r\n   componentDidUpdate = (props, state) => {\r\n     console.log(\"component updated\", this.items);\r\n   };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n     console.log(\"clear requested:\");\r\n   };\r\n\r\n   renderSuggestionContainer= ({containerProps, children}) => {\r\n     const {ref, ...restContainerProps} = containerProps;\r\n     const callRef = isolatedScroll => {\r\n       if (isolatedScroll !== null) {\r\n         ref(isolatedScroll.component);\r\n       }\r\n     }\r\n\r\n     //for fixing the issue of scrolling beyond the suggestions container scrolls the page itself\r\n     return (<IsolatedScroll ref={callRef} {...containerProps}>\r\n              {children}\r\n            </IsolatedScroll>);\r\n   };\r\n\r\n   render() {\r\n     const {value, suggestions, showLoader, errorMessage} = this.state;\r\n\r\n     const inputProps = {\r\n       placeholder: 'Type a location' ,\r\n       value:  value,\r\n       onChange: this.onChange\r\n     };\r\n\r\n     const isLoading = this.state.showLoader;\r\n\r\n   return (<Fragment>\r\n        <Autosuggest\r\n         suggestions={suggestions}\r\n         onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n         onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n         onSuggestionSelected={this.onSuggestionSelected}\r\n         getSuggestionValue={getSuggestionValue}\r\n         highlightFirstSuggestion={true}\r\n         renderSuggestion={renderSuggestion}\r\n         renderSuggestionContainer={this.renderSuggestionContainer}\r\n         inputProps={inputProps}\r\n         theme={theme}\r\n       />\r\n         {isLoading ? <Fragment><Loader message={`Loading suggestions for ${value}...`}/></Fragment> :\r\n         (errorMessage ? <Error errorMessage={errorMessage}></Error> : null)}\r\n         </Fragment>\r\n   );\r\n\r\n };\r\n}\r\n\r\nSearchInput.contextType = AddressContext;\r\n\r\nexport default SearchInput;\r\n","// map url to icons\r\nconst getWeatherIcon = (iconAbbr) => {\r\n  const dir = \"static/img/weather/\";\r\n  return dir + iconAbbr + \".svg\";\r\n}\r\n\r\nexport default getWeatherIcon;\r\n","// this URL points to the root directory of the app based on dev or prod environment\r\nconst isProduction = process.env.NODE_ENV === 'production'\r\nexport default isProduction ? '.' : 'https://www.metaweather.com'\r\n","\r\n\r\nconst convertToFahrenheit = (C) => {\r\n    return C*(9/5) + 32;\r\n}\r\n\r\n\r\nconst convertToCelsius = (F) => {\r\n    return ((F - 32) * (5/9));\r\n}\r\n\r\nexport {convertToCelsius, convertToFahrenheit};\r\n","import React, {Component, Fragment, useEffect, useState, useRef} from 'react';\r\n// celsius and fahrenheit\r\nconst UnitContext = React.createContext({ weatherUnit: 'C'});\r\n\r\nfunction UnitContextProvider({children}) {\r\n\r\n  const [weatherUnit, setWeatherUnit] = useState('C');\r\n\r\n\r\n\r\n   return (<UnitContext.Provider value={{weatherUnit, setWeatherUnit}}>\r\n        {children}\r\n     </UnitContext.Provider>);\r\n}\r\n\r\n\r\n\r\nexport {\r\n  UnitContextProvider,\r\n  UnitContext\r\n};\r\n","import React, {Component} from 'react';\r\nimport getWeatherIcon from '../../utils/getWeatherIcon';\r\nimport assetsSrc from '../../utils/assetsSrc';\r\nimport {convertToFahrenheit} from '../../utils/temperatureHelper';\r\nimport {UnitContext} from '../../context/unit/Unit';\r\n\r\nconst roundNumbers = (num) => {\r\n  return Math.round(num);\r\n}\r\n\r\n\r\n\r\n// weather update for one day\r\nclass WeatherCard extends Component {\r\n  static contextType = UnitContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  getWeatherIcon(weathertype) {\r\n    return \"assets/icons/\" + weathertype + \".svg\";\r\n  }\r\n\r\n  render() {\r\n\r\n    const highlightCard = (this.props.isSelected) ? \"bg-dark text-white\" : \"\";\r\n    return(\r\n          <div className={`card d-flex flex-row flex-sm-row flex-md-column bd-highlight align-items-center justify-content-center ${highlightCard}`} onClick={this.props.clickCallback}>\r\n         <div className=\"card-component mx-auto p-2 text-center\">{this.props.day.substring(0,3)}</div>\r\n         <div className=\"card-component mx-auto p-2\">\r\n          <img src={`${assetsSrc}/${getWeatherIcon(this.props.weatherType.abbr)}`} alt={this.props.weatherType.name} className=\"weather-icon\"/>\r\n         </div>\r\n\r\n         <div className=\"card-component mx-auto d-flex flex-row p-1\">\r\n           <div className=\"mx-1\">{roundNumbers(this.context.weatherUnit === \"C\" ? this.props.highestTemp : convertToFahrenheit(this.props.highestTemp))} <sup>o</sup></div>\r\n           <div className=\"mx-1\">{roundNumbers(this.context.weatherUnit === \"C\" ? this.props.lowestTemp : convertToFahrenheit(this.props.lowestTemp))} <sup>o</sup></div>\r\n         </div>\r\n         <div className=\"card-component mx-auto p-2\">\r\n          <div>{roundNumbers(this.props.humidity)}</div>\r\n          <div>{roundNumbers(this.props.speed)}</div>\r\n         </div>\r\n         </div>\r\n       );\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default WeatherCard;\r\n","import React, {Component, Fragment, useEffect, useState, useRef} from 'react';\r\nimport moment from 'moment-timezone';\r\nimport {isValid} from '../../utils/validityHelper';\r\n\r\nfunction CurrentInfo({forecast, address}) {\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const dateTimeRef = useRef();\r\n\r\n  const setDateTime = (dateObj) => {\r\n    setDate(dateObj ? dateObj.format('dddd, MMMM Do YYYY') : '');\r\n    setTime(dateObj ? dateObj.format('hh:mm:ss a') : '');\r\n    dateTimeRef.current = dateObj;\r\n  }\r\n\r\n  // set address\r\n  useEffect(() => {\r\n    if(address.title) {\r\n      setLocation(address.title);\r\n    }\r\n  }, [address]);\r\n\r\n\r\n  // setting date/time\r\n  useEffect(() => {\r\n      // reset time when weather changes\r\n      //console.log(forecast.timezone);\r\n      //console.log(moment().tz(forecast.timezone));\r\n      if (!isValid(forecast)) {\r\n        return;\r\n      }\r\n\r\n      setDateTime(moment().tz(forecast.timezone));\r\n\r\n\r\n      const dateTimer = setInterval(\r\n        () => {\r\n          if (forecast.time) {\r\n            const dateTimeObj = moment.tz(dateTimeRef.current, forecast.timezone).add(1 , 's');\r\n            setDateTime(dateTimeObj);\r\n          }\r\n\r\n        }\r\n        ,1000);\r\n\r\n      // increment timer by 1 sec\r\n      return () => {\r\n        clearInterval(dateTimer)\r\n      };\r\n\r\n\r\n  }, [forecast]);\r\n\r\n  return (isValid(forecast) ?\r\n    <div className=\"p-2\" style={{fontSize: '1.5rem'}}>\r\n    { location ?\r\n      (<p className=\"mb-2 font-weight-bold\">{location}\r\n        </p>)\r\n        : ''\r\n    }\r\n    { date && time ?\r\n     (<Fragment>\r\n       <p className=\"mb-2\">\r\n        {date}\r\n        <span className=\"font-weight-bold\"> | </span>\r\n        {time}\r\n       </p>\r\n     </Fragment>) : null\r\n    }\r\n    </div> : null\r\n  );\r\n}\r\n\r\nexport default CurrentInfo;\r\n","import React from 'react';\r\n\r\nimport {\r\n  WiDegrees\r\n} from 'react-icons/wi';\r\n\r\nconst WeatherIcon = ({iconName}) => {\r\n  // currently return for wind direction\r\n  const iconMap = {\r\n      'degrees': <WiDegrees style={{'fontSize': '2rem'}}/>\r\n  };\r\n  return (iconMap[iconName]);\r\n\r\n}\r\n\r\nconst WeatherDirectionIcon = ({iconName}) => {\r\n  // currently return for wind direction\r\n  return (<i className={\"wi wi-wind wi-wind-towards-\"+iconName.toLowerCase()}></i>);\r\n\r\n}\r\n\r\nexport {WeatherIcon, WeatherDirectionIcon};\r\n","import React, {Component, Fragment, useEffect, useState, useRef, useContext} from 'react';\r\nimport moment from 'moment-timezone';\r\nimport {isValid} from '../../utils/validityHelper';\r\nimport {convertToFahrenheit} from '../../utils/temperatureHelper';\r\nimport getWeatherIcon from '../../utils/getWeatherIcon';\r\nimport {UnitContext} from '../../context/unit/Unit';\r\nimport {WeatherIcon, WeatherDirectionIcon} from './WeatherIcon';\r\nimport assetsSrc from '../../utils/assetsSrc';\r\n\r\nfunction CurrentInfoDetail({currentWeather, address}) {\r\n  const {weatherUnit, setWeatherUnit} = useContext(UnitContext);\r\n\r\n  const unitClick = (unit) => {\r\n       setWeatherUnit(unit);\r\n  }\r\n\r\n  const convertToMetric = (mph) => {\r\n      //  meters per second\r\n      return 0.45 * mph;\r\n  }\r\n\r\n\r\n// currentWeather will be just the weather forecast item for one day\r\n  return (\r\n      (isValid(currentWeather)) ?\r\n      <Fragment>\r\n        <div className=\"detail-container d-flex flex-row p-2 justify-content-center align-items-center\">\r\n          <div className=\"d-flex flex-column align-items-center\">\r\n              <img src={`${assetsSrc}/${getWeatherIcon(currentWeather.weather_state_abbr)}`} alt={currentWeather.weather_state_name} className=\"img-fluid w-75 h-75 p-2\" />\r\n              <p className=\"my-2 text-center text-capitalize font-medium\">{currentWeather.weather_state_name || ''}</p>\r\n          </div>\r\n          <div>\r\n          <p>\r\n          <span className=\"h3\">{Math.round(weatherUnit === \"C\" ? currentWeather.the_temp : convertToFahrenheit(currentWeather.the_temp))}</span> <WeatherIcon iconName=\"degrees\"/>\r\n          <span className=\"font-weight-light\" style={{fontSize: '1.5rem'}}>\r\n            <span className={`cursor-pointer ${weatherUnit === \"C\" ? \"font-weight-normal border-light\" : \"opacity-75\"}`} onClick={() => unitClick(\"C\")}>C</span>  &nbsp;|&nbsp;\r\n            <span className={`cursor-pointer ${weatherUnit === \"F\" ? \"font-weight-normal border-light\" : \"opacity-75\"}`} onClick={() => unitClick(\"F\")}>F</span>\r\n          </span>\r\n          </p>\r\n          <p>\r\n          <span className=\"font-weight-normal\">{moment(currentWeather.applicable_date,\"YYYY-MM-DD\").format('MMM Do') || ''}</span>\r\n          </p>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"detail-container d-flex flex-column justify-content-center align-items-center p-2\" >\r\n          <div className=\"ml-sm-3 ml-md-3 ml-lg-3\">\r\n          {currentWeather.precipitation ? (<div className=\"my-1\"><p className=\"mb-2\"><span className=\"font-weight-bold\">Precipitation:</span> {currentWeather.precipitation || ''}</p></div>) : null}\r\n          {currentWeather.humidity ? (<div className=\"my-1\"><p className=\"mb-2\"><span className=\"font-weight-bold\">Humidity:</span> {currentWeather.humidity || ''} %</p></div>) : null}\r\n          {currentWeather.wind_speed ? (<div className=\"my-1\"><p className=\"mb-2\"><span className=\"font-weight-bold\">Wind speed:</span> {(weatherUnit === \"C\" ? convertToMetric(currentWeather.wind_speed).toFixed(2) + ' mps'\r\n                    : currentWeather.wind_speed.toFixed(2) + ' mph')}\r\n                  &nbsp;<WeatherDirectionIcon iconName={currentWeather.wind_direction_compass}/> </p></div>) : null }\r\n          </div>\r\n        </div>\r\n      </Fragment> : null\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default CurrentInfoDetail;\r\n","import React, {Component, Fragment} from 'react';\r\nimport WeatherCard from '../../components/weather_card/WeatherCard';\r\nimport {isValid} from '../../utils/validityHelper';\r\n\r\nimport {getDayFromDate} from '../../utils/DateHelper';\r\n\r\n\r\n\r\n\r\nconst WeatherWeek = (props) => {\r\n    return (isValid(props.forecast) ?\r\n        props.forecast.map((day, index) => {\r\n           const weatherType = {abbr: day.weather_state_abbr, name: day.weather_state_name};\r\n           return <WeatherCard isSelected={props.selectedIndex === index} day={getDayFromDate(day.applicable_date)} highestTemp={day.max_temp} lowestTemp={day.min_temp}\r\n                    weatherType={weatherType} humidity={day.humidity} speed={day.wind_speed} clickCallback={()=>{props.clickCallback(index)}}>\r\n          </WeatherCard>\r\n        })\r\n          : null);\r\n  };\r\n\r\n  export default WeatherWeek;\r\n","\r\n\r\nconst getDayFromDate = (date) => {\r\n  let days =['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n  var d = new Date(date);\r\n  return (days[d.getDay()]);\r\n}\r\n\r\nexport {getDayFromDate};\r\n","import API_URL from './API'\r\n\r\nconst FetchWeatherData = async (address) => {\r\n\r\n  let weatherForecast = [],response;\r\n  // metaweather needs woeid instead of latLong\r\n  try {\r\n    if (address.address.woeid) {\r\n      const url = `${API_URL}location/${address.address.woeid}/`;\r\n      const options = {};\r\n      response = await fetch(url).then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      });\r\n\r\n    weatherForecast = response.consolidated_weather;\r\n\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  return response;\r\n\r\n}\r\n\r\nexport default FetchWeatherData;\r\n","const isProduction = process.env.NODE_ENV === 'production'\r\nexport default isProduction\r\n  ? 'https://weather-react-api.now.sh'\r\n  : 'https://www.metaweather.com/api/'\r\n","import React, {Component, Fragment, useEffect, useContext, useState} from 'react';\r\nimport Error from '../../components/error/Error';\r\nimport WeatherCard from '../../components/weather_card/WeatherCard';\r\nimport CurrentInfo from '../../components/weather/CurrentInfo';\r\nimport CurrentInfoDetail from '../../components/weather/CurrentInfoDetail';\r\nimport Loader from '../../components/loader/Loader';\r\nimport WeatherWeek from '../weather_week/WeatherWeek';\r\nimport {AddressContext} from  '../../context/address/Address';\r\nimport {getDayFromDate} from '../../utils/DateHelper';\r\nimport {isCityValid, isForecastValid} from '../../utils/validityHelper';\r\nimport FetchWeatherData from '../../utils/FetchWeatherHelper';\r\nimport API_URL from '../../utils/API';\r\n\r\nimport * as forecastData from '../../data/metaweather.fiveday.forecast.json';\r\n\r\nimport './WeatherForecast.scss';\r\n\r\nconst WeatherForecast = () =>  {\r\n\r\n  const addressContext = useContext(AddressContext);\r\n  const [forecast, setForecast] = useState({});\r\n  const [weatherArray, setWeatherArray] = useState([{}]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setisError] = useState(false);\r\n  const [showContainer, setShowContainer] = useState(false);\r\n  const [selectedDay, setSelectedDay] = useState(0);\r\n\r\n\r\n  const fetchWeatherData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      let weatherForecast = await FetchWeatherData(\r\n        addressContext\r\n      );\r\n      // set data in state here\r\n      if (isForecastValid(weatherForecast)) {\r\n        setShowContainer(true);\r\n        setForecast(weatherForecast);\r\n        setWeatherArray(weatherForecast.consolidated_weather);\r\n        setSelectedDay(0);\r\n        setisError(false);\r\n      }\r\n\r\n    } catch (error) {\r\n      setisError(true);\r\n      console.log(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      // add some checks here later\r\n      if (addressContext.latLng) {\r\n        fetchWeatherData();\r\n      }\r\n\r\n    }\r\n    , [addressContext.latLng]);\r\n\r\n    // add loader component\r\n    return (isLoading ? <Fragment> <Loader message={isCityValid(addressContext.cityName) ? `Loading weather forecast for ${addressContext.cityName}...` : `Loading weather forecast...` } /></Fragment> :\r\n    (isError ? <Error errorMessage={\"Something went wrong, weather can't be fetched right now\"}/> :\r\n      (showContainer ?\r\n        <Fragment>\r\n      <div className=\"forecast-container p-3 mx-auto\">\r\n      <div className = \"d-flex flex-row justify-content-md-space-between\" >\r\n\r\n      <CurrentInfo forecast = {forecast} address = {addressContext.address}>\r\n       </CurrentInfo>\r\n\r\n\r\n      </div>\r\n      <div className = \"d-flex flex-column flex-sm-column flex-md-row flex-lg-row justify-content-between\" >\r\n      <CurrentInfoDetail currentWeather = {weatherArray[selectedDay]}> </CurrentInfoDetail> </div>\r\n\r\n      <div className=\"d-flex flex-column flex-sm-column flex-md-row flex-lg-row\">\r\n      <WeatherWeek selectedIndex={selectedDay} forecast = {weatherArray} clickCallback={(index) => {setSelectedDay(index)}}>\r\n      </WeatherWeek>\r\n      </div>\r\n      </div>\r\n      <div id=\"poweredBy\" className=\"mx-auto text-center text-dark\">\r\n        Powered by&nbsp;<a href=\"https://www.metaweather.com/api/\" target=\"_blank\" rel=\"noreferrer noopener\" class=\"\">MetaWeather</a>\r\n      </div></Fragment>: null))\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default WeatherForecast;\r\n","import React, {Component} from 'react';\r\nimport Error from '../../components/error/Error';\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {hasError: false};\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return {hasError: true};\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.error(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // render custom fallback UI\r\n      return(<div class=\"d-flex justify-content-center\">\r\n        <Error errorMessage={'Something went wrong.. :-/'}/>\r\n      </div>);\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default ErrorBoundary;\r\n","import React, {Component} from 'react';\r\n\r\nimport Header from './components/header/Header';\r\nimport Footer from './components/footer/Footer';\r\nimport SearchInput from './components/search/Search';\r\nimport WeatherCard from './components/weather_card/WeatherCard';\r\nimport WeatherForecast from './container/weather_forecast/WeatherForecast';\r\nimport {AddressContextProvider} from './context/address/Address';\r\nimport {UnitContextProvider} from './context/unit/Unit';\r\nimport ErrorBoundary from './container/error_boundary/ErrorBoundary';\r\n\r\nimport './sass/app.scss';\r\nimport {Row, Container, Col} from \"react-bootstrap\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n  return (\r\n   <div className=\"App\">\r\n     <Row id=\"header\">\r\n        <Header />\r\n     </Row>\r\n\r\n     <AddressContextProvider>\r\n\r\n       <ErrorBoundary>\r\n        <div className=\"mw-100 w-50 mx-auto d-flex flex-column align-items-center\" style={{minWidth: '10rem'}}>\r\n          <SearchInput />\r\n        </div>\r\n      </ErrorBoundary>\r\n\r\n     <Row id=\"content\">\r\n         <UnitContextProvider>\r\n         <ErrorBoundary>\r\n         <WeatherForecast></WeatherForecast>\r\n         </ErrorBoundary>\r\n         </UnitContextProvider>\r\n     </Row>\r\n     </AddressContextProvider>\r\n      <Row>\r\n        <div className=\"my-4 p-2\">\r\n        </div>\r\n      </Row>\r\n     <Row id=\"footer\">\r\n        <Footer />\r\n     </Row>\r\n   </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}